#!/usr/bin/env coffee
#
# A development tool that rebuilds make targets when source files
# change. It also reloads the browser
#
# * Run the server and restart it when any of Haskell sources change
#
# * Run the reload server that triggers page refreshes when any of the
#   assets or compiled client files change
#
# * Run the karma server and restart it when the configuration file
#   changes.
#
# * Recompile the stylesheets when they change
#
# * Recompile the development webapp if client Coffee and TypeScript
#   sources change, or the bower file changes.

createWatcher = require('../../everybreath')
frish = require('frish')
{runner, worker}  = require('schaffen')


ignore = [
  /(^|\/)\../
  /^node_modules/
  /^bower_components/
  /^\.git/
  /\.swp$/
  /~$/
  /^dist/
]
{watch} = createWatcher('.', ignore, throttle: 400)

registerWorker = (worker)->
  process.on 'exit', -> worker.stop()
  worker.start()


# Tags
tags = runner('make tags', silent: false)
watch 'Pladen/**/*.hs', tags


# Development server
server = worker 'cabal run'
watch('Pladen/**/*.hs', server.restart)
registerWorker(server)


# Reload browser
{reload} = frish(3008)
# server.on('restart', reload)
watch('assets', 'client/**/*.js', reload)


# Karma
karma = worker 'karma start'
watch('karma.conf.js', 'package.json', karma.restart)
registerWorker(karma)


# Styles
styles = runner('make styles')
watch 'styles/**/*.scss', styles


# Lint
coffeelint = runner 'coffeelint', '--quiet', '{}'
watch('**/*.coffee', coffeelint)


# Web Application
webapp = runner('make webapp-dev')

watch 'client/**/*.coffee', 'client/**/*.ts', 'bower.json', webapp
